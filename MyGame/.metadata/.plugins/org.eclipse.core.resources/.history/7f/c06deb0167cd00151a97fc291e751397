package firstgame.main;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class DataBaseManager {

	private String fileName = "GameDataBase.txt";
	
	public String createUser(String userName, String passWord) throws FileNotFoundException{
		Scanner sc = new Scanner(new File(fileName));
		boolean userNameCheck = true;
		
		if(userName.length() < 1){
			String message = "Please enter a username";
			sc.close();
			return message;
		}
		
		//goes through all the lines in the file and searches for username and password
		while(sc.hasNextLine()){
			String line = sc.nextLine();
			
			//checks if username has been used before
			if(line.equals(userName)){
				userNameCheck = false;
				sc.close();
				break;
			}
		}
		
		sc.close();	
		
		if(userNameCheck && passWord.length() < 6){
			String message = "Password must be at least 6 characters, please try again.";
			return message;
		}
		
		//userNameCheck established set above by scanning the DataBase
		if(userNameCheck){
			Charset utf8 = StandardCharsets.UTF_8;
			List<String> lines = Arrays.asList(userName, passWord,"0","0","0","0"); //places username, password, speed, health, fire rate, bombradius
	
			try {
			    Files.write(Paths.get(fileName), lines, utf8,StandardOpenOption.CREATE, StandardOpenOption.APPEND);
			} catch (IOException e) {
			    e.printStackTrace();
			}
			
			String message = "You created a new user. Login to start playing!";
			return message;
		}
		if(!userNameCheck){
			String message = "This user name is already in use. Please try again with a different user name.";
			return message;
		}
		else{
			String message = "Unable to create user name. We apologize for this but there is a bug in the system.";
			return message;
		}
		

	}
	
	public boolean searchUserAndPass(String userName, String passWord) throws FileNotFoundException{
		Scanner sc = new Scanner(new File(fileName));
		boolean userNameCheck = false;
		int userNameLine = 0;
		int lineCount = 0;
		boolean skip = false;
		
		//goes through all the lines in the file and searches for username and password
		while(sc.hasNextLine()){
			lineCount++;
			String line = sc.nextLine();
			
			//checks if username is correct
			if(line.equals(userName) && !skip){
				userNameCheck = true;
				userNameLine = lineCount;
				skip = true;
			}
			
			//checks if password is the same and if current line is one past the correct username
			if(userNameCheck && line.equals(passWord) && ((lineCount - userNameLine) == 1)){
				sc.close();
				return true;
			}
		}
		sc.close();
		return false;
	}
	
	public int getSpeedLevel(String userName, String passWord){
		Scanner sc = new Scanner(new File(fileName));
		boolean userNameCheck = false;
		int userNameLine = 0;
		int lineCount = 0;
		boolean skip = false;
		
		//goes through all the lines in the file and searches for username and password
		while(sc.hasNextLine()){
			lineCount++;
			String line = sc.nextLine();
			
			//checks if username is correct
			if(line.equals(userName) && !skip){
				userNameCheck = true;
				userNameLine = lineCount;
				skip = true;
			}
			
			//checks if password is the same and if current line is one past the correct username
			if(userNameCheck && line.equals(passWord) && ((lineCount - userNameLine) == 1)){
				int speedLevel = Integer.parseInt(sc.nextLine());
				sc.close();
				return speedLevel;
			}
		}
		sc.close();
		else {
			return 0;
		}
		
	}
	
}

